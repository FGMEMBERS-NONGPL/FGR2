<!-- A wrapper file for the FGR.2 3D model REMBRANDT VERSION -->

<PropertyList>

 <path>FGR2.ac</path>
 
 <animation>
        <type>range</type>
        <min-m>0</min-m>
        <max-m>30000</max-m>
    </animation>
 
  <!-- MP sound call -->
  <sound><path>Aircraft/FGR2/Sounds/mp-sound.xml</path></sound>
 
 <!-- Skin switching code -->

<nasal>
    <load>
      var livery_update = aircraft.livery_update.new("Aircraft/FGR2/Models/Liveries", 50);
	  <![CDATA[
var root = cmdarg();
var rootindex = root.getIndex();
var mpPath = "/ai/models/multiplayer["~ rootindex ~"]/";

var lightsPath = mpPath~"lightpack/"; #path to the property node, where all internal values are placed

props.globals.initNode(mpPath~"sim/is-MP-Aircraft", 1, "BOOL");
      
srand();
#wherever you want to add randomization of time, use something like:  + rand()*0.05-0.025 (included by default where appropriate)


#list of switches for lights - if you don't intend to use some light, assign it nil value instead, like whateverSwitch = nil; and you don't need to care about anything else
#IMPORTANT: don't put / on the start of the string, it's already included in the mpPath property
var navSwitch = mpPath~"controls/lighting/nav-lights-switch";
var beaconSwitch = mpPath~"controls/lighting/beacon-switch";
var strobeSwitch = mpPath~"controls/lighting/strobe-switch";
var landingSwitch = mpPath~"controls/lighting/landing-lights-switch";
var taxiSwitch = mpPath~"controls/lighting/taxi-light-switch";
var probeSwitch = mpPath~"controls/lighting/probe-light-switch";
var whiteSwitch = mpPath~"controls/lighting/white-light-switch";

#switch this from 1 to 0 if you want to use advanced cyclical fading animation of the the nav lights instead of being stable on when the switch is on
navStillOn = 1;


#I need to set listener on some MP transferred properties; this doesn't seem to work well sometimes, so I mirror them to the original location on any change
#This also simplifies work as I can use almost the same code for MP as is the local Nasal. Furthermore, I can use meaningful property names in the model XML files instead of referencing the MP properties. 
var mpVar = {
	new: func(propIn, propOut) {
		var m = { parents: [mpVar] };
		m.propIn = propIn;
		m.propOut = propOut;
		if(propIn==nil or propOut==nil) return m;
		m.value = getprop(propIn);
		setprop(propOut, m.value);
		return m;
	},
	check: func {
		if(me.propIn==nil or me.propOut==nil) return;
		var newValue = getprop(me.propIn);
		if(newValue != me.value) {
			setprop(me.propOut, newValue);
			me.value = newValue;
			#print("value of "~me.propOut~" changed: "~newValue);
		}
	},
};
#init any property copy object needed in this array (anything you need to transfer over MP, but you are using the original paths in your xmls)
#also used for properties you are using a listener on, or properties which you maybe want to manipulate during the <unload> 
#if you're just using the pack, change the values according to the MP bindings in the -set.xml file
#you don't need to delete the entries if the path is nil - it gets skipped automatically and the MP path is just ignored
var mirrorValues = [
	mpVar.new(mpPath~"sim/multiplay/generic/int[7]", mpPath~"sim/crashed"),
	mpVar.new(mpPath~"sim/multiplay/generic/int[0]", navSwitch),
	mpVar.new(mpPath~"sim/multiplay/generic/int[1]", beaconSwitch),
	mpVar.new(mpPath~"sim/multiplay/generic/int[1]", strobeSwitch),
	mpVar.new(mpPath~"sim/multiplay/generic/int[3]", landingSwitch),
	mpVar.new(mpPath~"sim/multiplay/generic/int[4]", taxiSwitch),
	mpVar.new(mpPath~"sim/multiplay/generic/int[4]", probeSwitch),
	mpVar.new(mpPath~"sim/multiplay/generic/int[0]", whiteSwitch),
];
#loop at the default MP transfer frequency (10Hz)
var mirrorTimer = maketimer(0.1, func {
	foreach(var mir; mirrorValues) {
		mir.check();
	}
});
mirrorTimer.start();



#### NAV LIGHTS ####

#class for a periodic fade in/out animation - for flashing, use rather standard aircraft.light.new(), as in Beacon and Strobe section
var lightCycle = {
	#constructor
	new: func(propSwitch, propOut) {
		m = { parents: [lightCycle] };
		props.globals.initNode(propOut, 0, "DOUBLE");
		props.globals.initNode(propSwitch, 1, "BOOL");
		m.fadeIn = 0.4 + rand()*0.05-0.025; #fade in time
		m.fadeOut = 0.4 + rand()*0.05-0.025; #fade out time
		m.stayOn = 1.5 + rand()*0.05-0.025; #stable on period
		m.stayOff = 1 + rand()*0.05-0.025; #stable off period
		m.turnOff = 0.12; #fade out time when turned off
		m.phase = 0; #phase to be run on next timer call: 0 -> fade in, 1 -> stay on, 2 -> fade out, 3 -> stay off
		m.cycleTimer = maketimer(0.1, func {
			if(getprop(propSwitch)) {
				if(m.phase == 0) {
					interpolate(propOut, 1, m.fadeIn);
					m.phase = 1;
					m.cycleTimer.restart(m.fadeIn);
				}
				else if(m.phase == 1){
					m.phase = 2;
					m.cycleTimer.restart(m.stayOn);
				}
				else if(m.phase == 2){
					interpolate(propOut, 0, m.fadeOut);
					m.phase = 3;
					m.cycleTimer.restart(m.fadeOut);
				}
				else if(m.phase == 3){
					m.phase = 0;
					m.cycleTimer.restart(m.stayOff);
				}
			}
			else {
				interpolate(propOut, 0, m.turnOff); #kills any currently ongoing interpolation
				m.phase = 0;
			}
		});
		m.cycleTimer.singleShot = 1;
		if(propSwitch==nil) {
			m.listen = nil;
			return m;
		}
		m.listen = setlistener(propSwitch, func{m.cycleTimer.restart(0);}); #handle switch changes
		m.cycleTimer.restart(0); #start the looping
		return m;
	},
	#destructor
	del: func {
		if(me.listen!=nil) removelistener(me.listen);
		me.cycleTimer.stop();
	},
};

#By default, the switch property is initialized to 1 (only if no value is already assigned). Don't change the class implementation! To override this, set the property manually. You don't need to care if any other code already does it for you. 
var navLights = nil;
if(!navStillOn) {
	navLights = lightCycle.new(navSwitch, lightsPath~"nav-lights-intensity");
	### Uncomment and tune those to customize times ###
	#navLights.fadeIn = 0.4; #fade in time 
	#navLights.fadeOut = 0.4; #fade out time
	#navLights.stayOn = 3 + rand()*0.05-0.025; #stable on period
	#navLights.stayOff = 0.6; #stable off period
	#navLights.turnOff = 0.12; #fade out time when turned off
}


### BEACON ###
var beacon = nil;
if(beaconSwitch!=nil) {
	props.globals.initNode(beaconSwitch, 1, "BOOL");
	beacon = aircraft.light.new(lightsPath~"beacon-state", 
		[0.0, 1.0 + rand()*0.05-0.025], beaconSwitch);
}
	
	
### STROBE ###
var strobe = nil;
if(strobeSwitch!=nil) {
	props.globals.initNode(strobeSwitch, 1, "BOOL");
	strobe = aircraft.light.new(lightsPath~"strobe-state", 
		[0.0, 0.87 + rand()*0.05-0.025], strobeSwitch);
}


### LIGHT FADING ###

#class for controlling fade in/out behavior - propIn is a control property (handled as a boolean) and propOut is interpolated
#all light brightness animations in xmls depend on propOut (Rembrandt brightness, material emission, flares transparency, ...)
var lightFadeInOut = {
	#constructor
	new: func(propSwitch, propOut) {
		m = { parents: [lightFadeInOut] };
		m.fadeIn = 0.3; #some sane defaults
		m.fadeOut = 0.4;
		if(propSwitch==nil) {
			m.listen = nil;
			return m;
		}
		props.globals.initNode(propSwitch, 1, "BOOL");
		m.isOn = getprop(propSwitch);
		props.globals.initNode(propOut, m.isOn, "DOUBLE");
		m.listen = setlistener(propSwitch, 
			func {
				if(m.isOn and !getprop(propSwitch)) {
					interpolate(propOut, 0, m.fadeOut);
					m.isOn = 0;
				}
				if(!m.isOn and getprop(propSwitch)) {
					interpolate(propOut, 1, m.fadeIn);
					m.isOn = 1;
				}
			}
		);
		return m;
	},
	#destructor
	del: func {
		if(me.listen!=nil) removelistener(me.listen);
	},
};

fadeLanding = lightFadeInOut.new(landingSwitch, lightsPath~"landing-lights-intensity");
fadeTaxi = lightFadeInOut.new(taxiSwitch, lightsPath~"taxi-light-intensity");
fadeProbe = lightFadeInOut.new(probeSwitch, lightsPath~"probe-light-intensity");
fadeWhite = lightFadeInOut.new(whiteSwitch, lightsPath~"white-light-intensity");
if(navStillOn) {
	navLights = lightFadeInOut.new(navSwitch, lightsPath~"nav-lights-intensity");
	navLights.fadeIn = 0.1;
	navLights.fadeOut = 0.12;
}
#manipulate times if defaults don't fit your needs:
#fadeLanding.fadeIn = 0.5;
#fadeLanding.fadeOut = 0.8;


### the rest of your model load embedded Nasal code ###

    ]]>   
      
    </load>
    <unload>
      #prevent multiple timers and listeners from running and fighting on next connect
      #cleanly destroy MP property mirroring
      mirrorTimer.stop();
      mirrorTimer = nil;
      mirrorValues = nil;
      
      #cleanly destroy nav lights
      if(navStillOn) {
      	navLights.del();
      }
      else {
      	if(navSwitch!=nil) setprop(navSwitch, 0);
      	navLights.del();
      	if(navSwitch!=nil) navLights.cycleTimer = nil;
      	navLights = nil;
      }
      
      #cleanly destroy beacon
      if(beaconSwitch!=nil) setprop(beaconSwitch, 0);
      beacon.del();
      beacon = nil;
      
      #cleanly destroy strobe
      if(strobeSwitch!=nil) setprop(strobeSwitch, 0);
      strobe.del();
      strobe = nil;
      
      #cleanly destroy light fade in/out animation objects
      fadeLanding.del();
      fadeTaxi.del();
      fadeProbe.del();
      fadeWhite.del();
      
      ### the rest of your model unload embedded Nasal code ###
	  
livery_update.stop();
    </unload>
  </nasal>
 
 <!-- fuselage -->
  <animation>
        <type>material</type>
        <object-name>fuselage</object-name>
        
        <property-base>sim/model/livery</property-base>
        <texture-prop>texture-fuselage</texture-prop>
        <texture>01FGR2.png</texture>
    </animation>
 
 <!-- fuselage nose -->
  <animation>
        <type>material</type>
        <object-name>fuselage-fwd</object-name>
		
        
        <property-base>sim/model/livery</property-base>
        <texture-prop>texture-nose</texture-prop>
        <texture>03FGR2.png</texture>
    </animation>
	
	<!-- fuselage underside-->
  <animation>
        <type>material</type>
        <object-name>fuselage-bottom</object-name>
		
        <object-name>NoseGearDoor</object-name>
		<object-name>NoseGearStrutDoor</object-name>
        <property-base>sim/model/livery</property-base>
        <texture-prop>texture-belly</texture-prop>
        <texture>02FGR2.png</texture>
    </animation>
 
 <!-- fuselage rear -->
  <animation>
        <type>material</type>
        <object-name>fuselage-aft</object-name>
        
        <property-base>sim/model/livery</property-base>
        <texture-prop>texture-fuselagerear</texture-prop>
        <texture>04FGR2.png</texture>
    </animation>
 
 
 <!-- left upper wing -->
    <animation>
        <type>material</type>
        <object-name>LWingUpper</object-name>
        <object-name>LSlatOuter-top</object-name>
		<object-name>LAileron</object-name>
		<object-name>LFlap</object-name>
		<object-name>LHTailTop</object-name>
		<object-name>LSpoiler</object-name>
		<object-name>LSlatMiddle-top</object-name>
        <property-base>sim/model/livery</property-base>
        <texture-prop>texture-luwings</texture-prop>
        <texture>05FGR2.png</texture>
    </animation>
	
	<!-- left lower wing -->
    <animation>
        <type>material</type>
        <object-name>LWingLower</object-name>
        <object-name>LSlatOuter</object-name>
		<object-name>LSlatMiddle</object-name>
		<object-name>left-well-cover</object-name>
		<object-name>LSpeedbrake</object-name>
		
		<object-name>LFlap-bottom</object-name>
		<object-name>LAileron-bottom</object-name>
		<object-name>LMainGearDoorInner</object-name>
		<object-name>LMainGearDoor</object-name>
		<object-name>LHTailBottom</object-name>
        <property-base>sim/model/livery</property-base>
        <texture-prop>texture-llwings</texture-prop>
        <texture>06FGR2.png</texture>
    </animation>
	
	<!-- right upper wing -->
    <animation>
        <type>material</type>
        <object-name>RWing-top</object-name>
        <object-name>RFlap</object-name>
		<object-name>RAileron</object-name>
		<object-name>RSlatOuter-top</object-name>
		<object-name>RSlatMiddle-top</object-name>
		<object-name>RWing-top</object-name>
		<object-name>RHTailTop</object-name>
		<object-name>RSpoiler</object-name>
        <property-base>sim/model/livery</property-base>
        <texture-prop>texture-ruwings</texture-prop>
        <texture>07FGR2.png</texture>
    </animation>
	
	<!-- right lower wing -->
    <animation>
        <type>material</type>
        <object-name>RWing-bottom</object-name>
        <object-name>RSpeedbrake</object-name>
		<object-name>RFlap-bottom</object-name>
		<object-name>RAileron-bottom</object-name>
		<object-name>RSlatOuter</object-name>
		<object-name>RSlatMiddle</object-name>
		<object-name>RMainGearDoorInner</object-name>
		<object-name>RMainGearDoor</object-name>
		<object-name>right-well-cover</object-name>
		
		
		<object-name>RHTailBottom</object-name>
        <property-base>sim/model/livery</property-base>
        <texture-prop>texture-rlwings</texture-prop>
        <texture>08FGR2.png</texture>
    </animation>
	<!-- Tail -->
	<animation>
        <type>material</type>
        <object-name>VTail</object-name>
        <object-name>Rudder</object-name>
		
		
		<object-name>Pitot</object-name>
		
		
        <property-base>sim/model/livery</property-base>
        <texture-prop>texture-tail</texture-prop>
        <texture>09FGR2.png</texture>
    </animation>


	 <animation>
    <type>shader</type>
    <shader>chrome</shader>
    <texture>Aircraft/Generic/Effects/glass_shader.png</texture>
    <object-name>mirrors</object-name>
    
  </animation>
  
  <!-- pylons -->
	<animation>
        <type>material</type>
        <object-name>Station5</object-name>
        <object-name>Station4</object-name>
		<object-name>Rails-right</object-name>
		<object-name>centerline-pylon</object-name>
		<object-name>Station2</object-name>
		<object-name>Rails-left</object-name>
		<object-name>Station1</object-name>
		
        <property-base>sim/model/livery</property-base>
        <texture-prop>texture-pylon</texture-prop>
        <texture>pylons.jpg</texture>
    </animation>

	
	
	<!-- pilots -->
	<animation>
        <type>material</type>
        <object-name>tete</object-name>
    <object-name>corps</object-name>
    <object-name>bras</object-name>
    <object-name>avantbras</object-name>
    <object-name>main</object-name>
        <property-base>sim/model/livery</property-base>
        <texture-prop>texture-pilot</texture-prop>
        <texture>RAFpilot.png</texture>
    </animation>	
  
  
   <!-- Transparent Surfaces for Rembrandt rendering -->
   
    <animation>
    <type>shader</type>
    <shader>chrome</shader>
    <texture>Aircraft/Generic/Effects/glass_shader.png</texture>
    <object-name>RearGlass</object-name>
       <object-name>FwdCanopyGlass</object-name>
	    <object-name>windscreen-glass</object-name>
		<object-name>Beacon</object-name>
		<object-name>LandingLights</object-name>
		

  </animation>
  
  
  <effect>
      <inherits-from>Effects/model-transparent</inherits-from>
       <object-name>RearGlass</object-name>
       <object-name>FwdCanopyGlass</object-name>
	    <object-name>windscreen-glass</object-name>
		<object-name>Beacon</object-name>
		<object-name>LandingLights</object-name>
		<object-name>CPT-hud-screen</object-name>
   </effect>
   
   
   

<!-- Solid Surfaces for Rembrandt rendering -->
       
   
   <animation>
    
   <object-name>fuselage</object-name>
	<object-name>RWing-bottom</object-name>
        <object-name>RSpeedbrake</object-name>
		<object-name>RFlap-bottom</object-name>
		<object-name>RAileron-bottom</object-name>
		<object-name>RSlatOuter</object-name>
		<object-name>RSlatMiddle</object-name>
		<object-name>RMainGearDoorInner</object-name>
		<object-name>RMainGearDoor</object-name>
		<object-name>right-well-cover</object-name>
		<object-name>Station5</object-name>
		<object-name>Station4</object-name>
		<object-name>Rails-right</object-name>
		<object-name>RHTailBottom</object-name>	
		<object-name>RWing-top</object-name>
        <object-name>RFlap</object-name>
		<object-name>RAileron</object-name>
		<object-name>RSlatOuter-top</object-name>
		<object-name>RSlatMiddle-top</object-name>
		<object-name>RWing-top</object-name>
		<object-name>RHTailTop</object-name>
		<object-name>RSpoiler</object-name>
		<object-name>LWingLower</object-name>
        <object-name>LSlatOuter</object-name>
		<object-name>LSlatMiddle</object-name>
		<object-name>left-well-cover</object-name>
		<object-name>LSpeedbrake</object-name>
		<object-name>Station1</object-name>
		<object-name>Rails-left</object-name>
		<object-name>Station2</object-name>
		<object-name>LFlap-bottom</object-name>
		<object-name>LAileron-bottom</object-name>
		<object-name>LMainGearDoorInner</object-name>
		<object-name>LMainGearDoor</object-name>
		<object-name>LHTailBottom</object-name>
		<object-name>LWingUpper</object-name>
        <object-name>LSlatOuter-top</object-name>
		<object-name>LAileron</object-name>
		<object-name>LFlap</object-name>
		<object-name>LHTailTop</object-name>
		<object-name>LSpoiler</object-name>
		<object-name>LSlatMiddle-top</object-name>
		<object-name>fuselage-aft</object-name>
		<object-name>fuselage-bottom</object-name>
		<object-name>centerline-pylon</object-name>
        <object-name>NoseGearDoor</object-name>
		<object-name>NoseGearStrutDoor</object-name>
		<object-name>fuselage-fwd</object-name>
		<object-name>VTail</object-name>
        <object-name>Rudder</object-name>
		<object-name>Pitot</object-name>
		<object-name>tailhook</object-name>
		<object-name>NoseGearStrut</object-name>
		<object-name>LNoseTire</object-name>
		<object-name>RNoseTire</object-name>
		<object-name>LMainGearStrut</object-name>
		<object-name>LMainTire</object-name>
		<object-name>LMainGearBrace</object-name>
		<object-name>RMainGearStrut</object-name>
		<object-name>RMainGearBrace</object-name>
		<object-name>RMainTire</object-name>
		<object-name>mirrors</object-name>
		
    </animation>
	
<!-- ******************** instruments *******************-->

 <model>
  <path>Aircraft/FGR2/Models/interior.xml</path>
  <offsets>
   <x-m>0.0952</x-m>
   <y-m>-0.03</y-m>
   <z-m>1.08</z-m>
    <pitch-deg>-10</pitch-deg>
  </offsets>
 </model>
 
 

 

<!-- ********************** stores **********************-->

<model>
  <path>Aircraft/FGR2/Models/Stores/loads.xml</path>
  <offsets>
   <x-m></x-m>
   <y-m></y-m>
   <z-m></z-m>
  </offsets>
 </model>

 <!-- Brake Chute -->
 <model>
   <path>Aircraft/DavePack/Stores/Chute/chute.xml</path>
   <offsets>
     <x-m>10</x-m>
     <y-m>0</y-m>
     <z-m>1</z-m>
     <pitch-deg>0</pitch-deg>
   </offsets>
 </model>

 

<!-- ********************** effects **********************-->

  <!-- Bump Map Effect -->
  <effect>
    <inherits-from>Aircraft/FGR2/Models/Effects/fgr2_bumpspec-01</inherits-from>
    <object-name>fuselage</object-name>
    <object-name>NoseGearStrutDoor</object-name>
    <object-name>LSpeedbrake</object-name>
    <object-name>RSpeedbrake</object-name>
  </effect>

  <effect>
    <inherits-from>Aircraft/FGR2/Models/Effects/fgr2_bumpspec-02</inherits-from>
    <object-name>fuselage-bottom</object-name>
    <object-name>nose-well-cover</object-name>
  </effect>

  <effect>
    <inherits-from>Aircraft/FGR2/Models/Effects/fgr2_bumpspec-03</inherits-from>
    <object-name>fuselage-fwd</object-name>
  </effect>

  <effect>
    <inherits-from>Aircraft/FGR2/Models/Effects/fgr2_bumpspec-04</inherits-from>
    <object-name>fuselage-aft</object-name>
  </effect>

  <effect>
    <inherits-from>Aircraft/FGR2/Models/Effects/fgr2_bumpspec-05</inherits-from>
    <object-name>LWingUpper</object-name>
    <object-name>LHTailTop</object-name>
    <object-name>LAileron</object-name>
    <object-name>LFlap</object-name>
    <object-name>LSlatMiddle-top</object-name>
    <object-name>LSlatOuter-top</object-name>
    <object-name>LSpoiler</object-name>
  </effect>

  <effect>
    <inherits-from>Aircraft/FGR2/Models/Effects/fgr2_bumpspec-06</inherits-from>
    <object-name>LWingLower</object-name>
    <object-name>LAileron-bottom</object-name>
    <object-name>LFlap-bottom</object-name>
    <object-name>LSlatMiddle</object-name>
    <object-name>LSlatOuter</object-name>
    <object-name>LMainGearDoor</object-name>
    <object-name>LMainGearDoorInner</object-name>
    <object-name>LHTailBottom</object-name>
    <object-name>left-well-cover</object-name>
  </effect>

  <effect>
    <inherits-from>Aircraft/FGR2/Models/Effects/fgr2_bumpspec-07</inherits-from>
    <object-name>RWing-top</object-name>
    <object-name>RHTailTop</object-name>
    <object-name>RAileron</object-name>
    <object-name>RFlap</object-name>
    <object-name>RSlatMiddle-top</object-name>
    <object-name>RSlatOuter-top</object-name>
    <object-name>RSpoiler</object-name>
  </effect>

  <effect>
    <inherits-from>Aircraft/FGR2/Models/Effects/fgr2_bumpspec-08</inherits-from>
    <object-name>RWing-bottom</object-name>
    <object-name>RAileron-bottom</object-name>
    <object-name>RFlap-bottom</object-name>
    <object-name>RSlatMiddle</object-name>
    <object-name>RSlatOuter</object-name>
    <object-name>RMainGearDoor</object-name>
    <object-name>RMainGearDoorInner</object-name>
    <object-name>RHTailBottom</object-name>
    <object-name>right-well-cover</object-name>
  </effect>

  <effect>
    <inherits-from>Aircraft/FGR2/Models/Effects/fgr2_bumpspec-09</inherits-from>
    <object-name>VTail</object-name>
    <object-name>Rudder</object-name>
  </effect>

  <effect>
    <inherits-from>Aircraft/FGR2/Models/Effects/fgr2_bumpspec-10</inherits-from>
    <object-name>gunhousing</object-name>
  </effect>


 
 <model>
  <path>Aircraft/FGR2/Models/Effects/tiptrail/tiptrail.xml</path>
   <offsets>
     <x-m>3.9</x-m>
     <y-m>-6.3</y-m>
     <z-m>0.3</z-m>
     <pitch-deg>0</pitch-deg>
   </offsets>
 </model>

 <model>
  <path>Aircraft/FGR2/Models/Effects/tiptrail/tiptrail.xml</path>
   <offsets>
     <x-m>3.9</x-m>
     <y-m>6.3</y-m>
     <z-m>0.3</z-m>
     <pitch-deg>0</pitch-deg>
   </offsets>
 </model>

 

  <!-- Contrail-left -->
  <model>
    <path>Aircraft/FGR2/Models/Effects/trail/trailL.xml</path>
    <offsets>
      <x-m>  12.0 </x-m>
      <y-m>  -0.7 </y-m>
      <z-m>   0.0 </z-m>
    </offsets>
  </model>

  <!-- Contrail-right -->
  <model>
    <path>Aircraft/FGR2/Models/Effects/trail/trailR.xml</path>
    <offsets>
      <x-m>  12.0 </x-m>
      <y-m>   0.7 </y-m>
      <z-m>   0.0 </z-m>
    </offsets>
  </model>

<!-- ******************** animations ********************-->


 <animation>
  <type>select</type>
  <object-name>NoseGearStrut</object-name>
  <object-name>NoseGearStrutDoor</object-name>
  <object-name>NoseGearDoor</object-name>
  <condition>
   <greater-than>
    <property>gear/gear[0]/position-norm</property>
    <value>0</value>
   </greater-than>
  </condition>
 </animation>

 <animation>
  <type>select</type>
  <object-name>LNoseTire</object-name>
  <object-name>RNoseTire</object-name>
  <object-name>NoseGearAxle</object-name>
  <condition>
   <greater-than>
    <property>gear/gear[0]/position-norm</property>
    <value>0</value>
   </greater-than>
  </condition>
 </animation>

 <animation>
  <type>select</type>
  <object-name>nose-well-cover</object-name>
  <object-name>right-well-cover</object-name>
  <object-name>left-well-cover</object-name>
  <condition>
   <equals>
    <property>gear/gear[0]/position-norm</property>
    <value>0</value>
   </equals>
  </condition>
 </animation>

 <animation>
  <type>rotate</type>
  <object-name>NoseGearStrut</object-name>
  <object-name>NoseGearStrutDoor</object-name>
  <property>gear/gear[0]/position-norm</property>
  <factor>-90</factor>
  <offset-deg>90</offset-deg>   
  <center>
   <x-m>-6.72</x-m>
   <y-m>0</y-m>
   <z-m>-0.2</z-m>
  </center>
  <axis>
   <x>0</x>
   <y>-1</y>
   <z>0</z>
  </axis>
 </animation>

 <animation>
  <type>rotate</type>
  <object-name>LNoseTire</object-name>
  <object-name>RNoseTire</object-name>
  <object-name>NoseGearAxle</object-name>
  <property>gear/gear[0]/position-norm</property>
  <factor>-90</factor>
  <offset-deg>90</offset-deg>   
  <center>
   <x-m>-6.72</x-m>
   <y-m>0</y-m>
   <z-m>-0.2</z-m>
  </center>
  <axis>
   <x>0</x>
   <y>-1</y>
   <z>0</z>
  </axis>
 </animation>

 <animation>
  <type>rotate</type>
  <object-name>LNoseTire</object-name>
  <object-name>RNoseTire</object-name>
  <object-name>NoseGearAxle</object-name>
  <property>sim/multiplay/generic/float[1]</property>
  <factor>1</factor>
  <center>
   <x-m>-6.645</x-m>
   <y-m>0</y-m>
   <z-m>-1.402</z-m>
  </center>
  <axis>
   <x>0</x>
   <y>0</y>
   <z>-1</z>
  </axis>
 </animation>

 <animation>
  <type>spin</type>
  <object-name>LNoseTire</object-name>
  <object-name>RNoseTire</object-name>
  <property>fdm/jsbsim/gear/unit[0]/wheel-speed-fps</property>
  <factor>15</factor>
  <center>
   <x-m>-6.644</x-m>
   <y-m>0</y-m>
   <z-m>-1.402</z-m>
  </center>
  <axis>
   <x>0</x>
   <y>-1</y>
   <z>0</z>
  </axis>
 </animation>

 <animation>
  <type>rotate</type>
  <object-name>NoseGearDoor</object-name>
  <property>gear/gear[0]/position-norm</property>
  <interpolation>
    <entry><ind>0</ind><dep>90</dep></entry>
    <entry><ind>0.1</ind><dep>0</dep></entry>
    <entry><ind>1</ind><dep>0</dep></entry>
  </interpolation>
  <center>
   <x-m>-5.44</x-m>
   <y-m>0.24</y-m>
   <z-m>-0.23</z-m>
  </center>
  <axis>
   <x>-1</x>
   <y>0</y>
   <z>0</z>
  </axis>
 </animation>

 <animation>
  <type>select</type>
  <object-name>LMainGearDoor</object-name>
  <object-name>LMainGearStrut</object-name>
  <object-name>LMainTire</object-name>
  <object-name>LMainGearDoorInner</object-name>
  <condition>
   <greater-than>
    <property>gear/gear[1]/position-norm</property>
    <value>0</value>
   </greater-than>
  </condition>
 </animation>

 <animation>
  <type>select</type>
  <object-name>LMainGearBrace</object-name>
  <condition>
   <greater-than>
    <property>gear/gear[1]/position-norm</property>
    <value>0.9</value>
   </greater-than>
  </condition>
 </animation>

 <animation>
  <type>rotate</type>
  <object-name>LMainGearDoor</object-name>
  <object-name>LMainGearStrut</object-name>
  <object-name>LMainTire</object-name>
  <property>gear/gear[1]/position-norm</property>
  <interpolation>
    <entry><ind>0</ind><dep>90</dep></entry>
    <entry><ind>1</ind><dep>0</dep></entry>
  </interpolation>
  <center>
   <x-m>0.78</x-m>
   <y-m>-2.99</y-m>
   <z-m>-0.19</z-m>
  </center>
  <axis>
   <x>1</x>
   <y>0</y>
   <z>0</z>
  </axis>
 </animation>


 <animation>
  <type>rotate</type>
  <object-name>LMainGearDoorInner</object-name>
  <property>gear/gear[1]/position-norm</property>
  <interpolation>
    <entry><ind>0</ind><dep>90</dep></entry>
    <entry><ind>0.1</ind><dep>0</dep></entry>
    <entry><ind>1</ind><dep>0</dep></entry>
  </interpolation>
  <center>
   <x-m>0.36</x-m>
   <y-m>-1.35</y-m>
   <z-m>-0.24</z-m>
  </center>
  <axis>
   <x>-1</x>
   <y>0</y>
   <z>0</z>
  </axis>
 </animation>

 <animation>
  <type>spin</type>
  <object-name>LMainTire</object-name>
  <property>fdm/jsbsim/gear/unit[1]/wheel-speed-fps</property>
  <factor>7</factor>
  <center>
   <x-m>0.767</x-m>
   <y-m>-2.92</y-m>
   <z-m>-1.252</z-m>
  </center>
  <axis>
   <x>0</x>
   <y>-1</y>
   <z>0</z>
  </axis>
 </animation>

 <animation>
  <type>select</type>
  <object-name>RMainGearDoor</object-name>
  <object-name>RMainGearStrut</object-name>
  <object-name>RMainTire</object-name>
  <object-name>RMainGearDoorInner</object-name>
  <condition>
   <greater-than>
    <property>gear/gear[2]/position-norm</property>
    <value>0</value>
   </greater-than>
  </condition>
 </animation>

 <animation>
  <type>select</type>
  <object-name>RMainGearBrace</object-name>
  <condition>
   <greater-than>
    <property>gear/gear[2]/position-norm</property>
    <value>0.9</value>
   </greater-than>
  </condition>
 </animation>


 <animation>
  <type>rotate</type>
  <object-name>RMainGearDoor</object-name>
  <object-name>RMainGearStrut</object-name>
  <object-name>RMainTire</object-name>
  <property>gear/gear[2]/position-norm</property>
  <interpolation>
    <entry><ind>0</ind><dep>90</dep></entry>
    <entry><ind>1</ind><dep>0</dep></entry>
  </interpolation>
  <center>
   <x-m>0.78</x-m>
   <y-m>2.99</y-m>
   <z-m>-0.19</z-m>
  </center>
  <axis>
   <x>-1</x>
   <y>0</y>
   <z>0</z>
  </axis>
 </animation>

 <animation>
  <type>spin</type>
  <object-name>RMainTire</object-name>
  <property>fdm/jsbsim/gear/unit[2]/wheel-speed-fps</property>
  <factor>7</factor>
  <center>
   <x-m>0.767</x-m>
   <y-m>2.92</y-m>
   <z-m>-1.252</z-m>
  </center>
  <axis>
   <x>0</x>
   <y>-1</y>
   <z>0</z>
  </axis>
 </animation>

 <animation>
  <type>rotate</type>
  <object-name>RMainGearDoorInner</object-name>
  <property>gear/gear[2]/position-norm</property>
  <interpolation>
    <entry><ind>0</ind><dep>90</dep></entry>
    <entry><ind>0.1</ind><dep>0</dep></entry>
    <entry><ind>1</ind><dep>0</dep></entry>
  </interpolation>
  <center>
   <x-m>0.36</x-m>
   <y-m>1.35</y-m>
   <z-m>-0.24</z-m>
  </center>
  <axis>
   <x>1</x>
   <y>0</y>
   <z>0</z>
  </axis>
 </animation>

 <animation>
  <type>rotate</type>
  <object-name>LHTailTop</object-name>
  <object-name>LHTailBottom</object-name>
  <property>surface-positions/elevator-pos-norm</property>
  <factor>15</factor>
  <offset-deg>0</offset-deg>   
  <center>
   <x-m>7.09</x-m>
   <y-m>-0.35</y-m>
   <z-m>1.13</z-m>
  </center>
  <axis>
   <x>0</x>
   <y>1</y>
   <z>0</z>
  </axis>
 </animation>

 <animation>
  <type>rotate</type>
  <object-name>RHTailTop</object-name>
  <object-name>RHTailBottom</object-name>
  <property>surface-positions/elevator-pos-norm</property>
  <factor>-15</factor>
  <offset-deg>0</offset-deg>   
  <center>
   <x-m>7.09</x-m>
   <y-m>0.35</y-m>
   <z-m>1.13</z-m>
  </center>
  <axis>
   <x>0</x>
   <y>-1</y>
   <z>0</z>
  </axis>
 </animation>

 <animation>
  <type>rotate</type>
  <object-name>LAileron</object-name>
  <object-name>LAileron-bottom</object-name>
  <property>surface-positions/aileron-pos-norm</property>
  <factor>15</factor>
  <min-deg>0</min-deg>
  <axis>
     <x1-m>2.7344</x1-m>
     <y1-m>-4.2129</y1-m>
     <z1-m>-0.2207</z1-m>
     <x2-m>2.3184</x2-m>
     <y2-m>-2.7676</y2-m>
     <z2-m>-0.2187</z2-m>
  </axis>
 </animation>
<!--
 <animation>
  <type>rotate</type>
  <object-name>LAileron</object-name>
  <property>surface-positions/flap-pos-norm</property>
  <factor>20</factor>
  <axis>
     <x1-m>2.7344</x1-m>
     <y1-m>-4.2129</y1-m>
     <z1-m>-0.2207</z1-m>
     <x2-m>2.3184</x2-m>
     <y2-m>-2.7676</y2-m>
     <z2-m>-0.2187</z2-m>
  </axis>
 </animation>
-->

 <animation>
  <type>rotate</type>
  <object-name>LSpoiler</object-name>
  <property>surface-positions/aileron-pos-norm</property>
  <factor>30</factor>
  <max-deg>0</max-deg>
  <axis>
     <x1-m>2.5273</x1-m>
     <y1-m>-4.2051</y1-m>
     <z1-m>-0.06835</z1-m>
     <x2-m>1.9219</x2-m>
     <y2-m>-2.7695</y2-m>
     <z2-m>-0.0175</z2-m>
  </axis>
 </animation>

 <animation>
  <type>rotate</type>
  <object-name>RAileron</object-name>
  <object-name>RAileron-bottom</object-name>
  <property>surface-positions/aileron-pos-norm</property>
  <factor>15</factor>
  <max-deg>0</max-deg>
  <axis>
     <x1-m>2.7305</x1-m>
     <y1-m>4.2148</y1-m>
     <z1-m>-0.2207</z1-m>
     <x2-m>2.3184</x2-m>
     <y2-m>2.7695</y2-m>
     <z2-m>-0.2187</z2-m>
  </axis>
 </animation>
<!--
 <animation>
  <type>rotate</type>
  <object-name>RAileron</object-name>
  <property>surface-positions/flap-pos-norm</property>
  <factor>-20</factor>
  <axis>
     <x1-m>2.7305</x1-m>
     <y1-m>4.2148</y1-m>
     <z1-m>-0.2207</z1-m>
     <x2-m>2.3184</x2-m>
     <y2-m>2.7695</y2-m>
     <z2-m>-0.2187</z2-m>
  </axis>
 </animation>
-->

 <animation>
  <type>rotate</type>
  <object-name>RSpoiler</object-name>
  <property>surface-positions/aileron-pos-norm</property>
  <factor>30</factor>
  <min-deg>0</min-deg>
  <axis>
     <x1-m>2.5273</x1-m>
     <y1-m>4.207</y1-m>
     <z1-m>-0.0684</z1-m>
     <x2-m>1.9219</x2-m>
     <y2-m>2.7715</y2-m>
     <z2-m>-0.0175</z2-m>
  </axis>
 </animation>

 <animation>
  <type>rotate</type>
  <object-name>Rudder</object-name>
  <property>surface-positions/rudder-pos-norm</property>
  <factor>-15</factor>
  <axis>
     <x1-m>7.53</x1-m>
     <y1-m>0</y1-m>
     <z1-m>1.619</z1-m>
     <x2-m>8.398</x2-m>
     <y2-m>0</y2-m>
     <z2-m>3.132</z2-m>
  </axis>
 </animation>

 <animation>
  <type>rotate</type>
  <object-name>LFlap</object-name>
  <object-name>LFlap-bottom</object-name>
  <property>surface-positions/flap-pos-norm</property>
  <factor>45</factor>
  <axis>
     <x1-m>2.3184</x1-m>
     <y1-m>-2.7676</y1-m>
     <z1-m>-0.2187</z1-m>
     <x2-m>1.9023</x2-m>
     <y2-m>-1.3203</y2-m>
     <z2-m>-0.2168</z2-m>
  </axis>
 </animation>
 
 <animation>
  <type>rotate</type>
  <object-name>RFlap</object-name>
  <object-name>RFlap-bottom</object-name>
  <property>surface-positions/flap-pos-norm</property>
  <factor>-45</factor>
  <axis>
     <x1-m>2.3184</x1-m>
     <y1-m>2.7695</y1-m>
     <z1-m>-0.2187</z1-m>
     <x2-m>1.9023</x2-m>
     <y2-m>1.3222</y2-m>
     <z2-m>-0.2168</z2-m>
  </axis>
 </animation>

 <animation>
  <type>rotate</type>
  <object-name>RSlatOuter</object-name>
  <object-name>RSlatOuter-top</object-name>
  <property>surface-positions/slat-pos-norm</property>
  <factor>30</factor>
  <axis>
     <x1-m>2.9355</x1-m>
     <y1-m>6.1328</y1-m>
     <z1-m>0.250</z1-m>
     <x2-m>0.791</x2-m>
     <y2-m>4.3496</y2-m>
     <z2-m>-0.1465</z2-m>
  </axis>
 </animation>

 <animation>
  <type>rotate</type>
  <object-name>RSlatMiddle</object-name>
  <object-name>RSlatMiddle-top</object-name>
  <property>surface-positions/slat-pos-norm</property>
  <factor>30</factor>
  <axis>
     <x1-m>0.8828</x1-m>
     <y1-m>4.2793</y1-m>
     <z1-m>-0.168</z1-m>
     <x2-m>-1.1035</x2-m>
     <y2-m>2.6523</y2-m>
     <z2-m>-0.1465</z2-m>
  </axis>
 </animation>

 <animation>
  <type>rotate</type>
  <object-name>LSlatOuter</object-name>
  <object-name>LSlatOuter-top</object-name>
  <property>surface-positions/slat-pos-norm</property>
   <factor>-30</factor>
  <axis>
     <x1-m>2.9355</x1-m>
     <y1-m>-6.1309</y1-m>
     <z1-m>0.250</z1-m>
     <x2-m>0.7907</x2-m>
     <y2-m>-4.3477</y2-m>
     <z2-m>-0.1465</z2-m>
  </axis>
 </animation>

 <animation>
  <type>rotate</type>
  <object-name>LSlatMiddle</object-name>
  <object-name>LSlatMiddle-top</object-name>
  <property>surface-positions/slat-pos-norm</property>
  <factor>-30</factor>
  <axis>
     <x1-m>0.873</x1-m>
     <y1-m>-4.2832</y1-m>
     <z1-m>-0.1679</z1-m>
     <x2-m>-1.1223</x2-m>
     <y2-m>-2.634</y2-m>
     <z2-m>-0.17456</z2-m>
  </axis>
 </animation>

 <animation>
  <type>select</type>
  <object-name>RSpeedbrake</object-name>
  <object-name>LSpeedbrake</object-name>
  <condition>
    <property>surface-positions/speedbrake-pos-norm</property>
  </condition>
 </animation>

 <animation>
  <type>rotate</type>
  <object-name>LSpeedbrake</object-name>
  <property>surface-positions/speedbrake-pos-norm</property>
  <factor>50</factor>
  <axis>
     <x1-m>1.1816</x1-m>
     <y1-m>-2.8516</y1-m>
     <z1-m>-0.2285</z1-m>
     <x2-m>0.9199</x2-m>
     <y2-m>-2.041</y2-m>
     <z2-m>-0.2285</z2-m>
  </axis>
 </animation>

 <animation>
  <type>rotate</type>
  <object-name>RSpeedbrake</object-name>
  <property>surface-positions/speedbrake-pos-norm</property>
  <factor>-50</factor>
  <axis>
     <x1-m>1.1816</x1-m>
     <y1-m>2.8535</y1-m>
     <z1-m>-0.2285</z1-m>
     <x2-m>0.9199</x2-m>
     <y2-m>2.0429</y2-m>
     <z2-m>-0.2285</z2-m>
  </axis>
 </animation>

 
 <!-- yasim anim -->
 <animation>
 <type>rotate</type>
 <object-name>tailhook</object-name>
 <property>gear/tailhook/position-norm</property>
 <factor>-70</factor>
  <offset-deg>0</offset-deg>
  <center>
   <x-m>4.81</x-m>
   <y-m>0</y-m>
   <z-m>-0.25</z-m>
  </center>
  <axis>
   <x>0</x>
   <y>-1</y>
   <z>0</z>
 </axis>
</animation>

 <animation>
  <type>rotate</type>
  <object-name>probe</object-name>
  <property>sim/model/FuelHose-positions/FuelHose/position-norm</property>
  <factor>30</factor>
  <center>
   <x-m>-2.96</x-m>
   <y-m>0.5114</y-m>
   <z-m>1.126</z-m>
  </center>
  <axis>
   <x>0</x>
   <y>0.5</y>
   <z>-0.4</z>
   </axis>
 </animation>
 
 <!-- Pilots -->
 
 <model>
 <name>Pilot</name>
    <path>Aircraft/FGR2/Models/pilot/Pilot.xml</path>
    <offsets>
      <x-m> -5.58 </x-m>
      <y-m> -00 </y-m>
      <z-m> 0.89 </z-m>
      <pitch-deg>-0</pitch-deg>
    </offsets>
  </model>
  
  <model>
 <name>WSO</name>
    <path>Aircraft/FGR2/Models/pilot/Pilot.xml</path>
    <offsets>
      <x-m> -4.15 </x-m>
      <y-m> -00 </y-m>
      <z-m> 1.15 </z-m>
      <pitch-deg>-0</pitch-deg>
    </offsets>
  </model>

 <!-- Suppress Pilot/Seat Model in Cockpit View -->
 

  <animation>
        <type>select</type>
         <object-name>Pilot</object-name>
  <object-name>WSO</object-name>
   <object-name>RearGlass</object-name>
       <object-name>FwdCanopyGlass</object-name>
	    <object-name>windscreen-glass</object-name>
		<condition>
        <not>
        <property>sim/current-view/internal</property>
        </not>
        </condition>
    </animation>	
 
 

 
<!-- Lights -->

 <model>
  <path>Aircraft/FGR2/Models/Lights/LightPack.xml</path>
   <offsets>
     <x-m>0</x-m>
     <y-m>0</y-m>
     <z-m>0</z-m>
   </offsets>
 </model>
 
 


  <animation>
    <type>select</type>
    
	<object-name>LandingLights</object-name>
     <condition>
      <equals>
        <property>gear/gear[0]/position-norm</property>
        <value> 1 </value>
      </equals>
    </condition>
  </animation> 
 

  <!-- Forward Canopy -->
 <animation>
    <type>rotate</type>
     <object-name>FwdCanopyGlass</object-name>
  <object-name>fwd-canopy-frame</object-name>
  <object-name>mirrors</object-name>
    <property>instrumentation/doors/crew/position-norm</property>
	<factor>50</factor>
    <interpolation>
      <entry><ind> 0 </ind><dep>  0 </dep></entry>
      <entry><ind> 1 </ind><dep> 30 </dep></entry>
    </interpolation>
   <center>
   <x-m>-4.77</x-m>
   <y-m>0</y-m>
   <z-m>1.81</z-m>
  </center>
  <axis>
   <x>0</x>
   <y>1</y>
   <z>0</z>
  </axis>
  </animation>
  
  
  
  
  
  
 
 <!-- Les flammes -->
  
   <model>
    <path>Aircraft/FGR2/Models/Effects/Afterburner/EJ200-L.xml</path>
    <offsets>
      <x-m>  7.0</x-m>
      <y-m>  -0.71</y-m>
      <z-m> -0.3</z-m>
      <pitch-deg>8</pitch-deg>
    </offsets>
  </model>

 
  <model>
    <path>Aircraft/FGR2/Models/Effects/Afterburner/EJ200-R.xml</path>
    <offsets>
      <x-m>  7.0</x-m>
      <y-m>  0.71</y-m>
      <z-m> -0.3</z-m>
      <pitch-deg>8</pitch-deg>
    </offsets>
  </model>
  
   
  
  <model>
    <path>Aircraft/FGR2/Models/Effects/smoke/smokeL.xml</path>
    <offsets>
      <x-m>  4.2</x-m>
      <y-m>  -0.71</y-m>
      <z-m> 0.16</z-m>
    </offsets>
  </model>

  
  <model>
    <path>Aircraft/FGR2/Models/Effects/smoke/smokeR.xml</path>
    <offsets>
     <x-m>  4.2</x-m>
      <y-m>  0.71</y-m>
      <z-m> 0.16</z-m>
    </offsets>
  </model>

  
 
 <model>
		<path>Aircraft/FGR2/Models/Effects/Vapour/Vapour.xml</path>
		<offsets>
			<x-m>-2.0</x-m>
			<y-m>-1.5</y-m>
			<z-m>0.9</z-m>
			<roll-deg>0</roll-deg>
			<pitch-deg>0</pitch-deg>
			<heading-deg>-25</heading-deg>
		</offsets>
	</model>
	
	<model>
		<path>Aircraft/FGR2/Models/Effects/Vapour/Vapour.xml</path>
		<offsets>
			<x-m>-2.0</x-m>
			<y-m>1.5</y-m>
			<z-m>0.9</z-m>
			<roll-deg>0</roll-deg>
			<pitch-deg>0</pitch-deg>
			<heading-deg>25</heading-deg>
		</offsets>
	</model>
	
	 <model>
		<path>Aircraft/FGR2/Models/Effects/Vapour/Vapour2.xml</path>
		<offsets>
			<x-m>1.0</x-m>
			<y-m>-4</y-m>
			<z-m>0.9</z-m>
			<roll-deg>0</roll-deg>
			<pitch-deg>0</pitch-deg>
			<heading-deg>45</heading-deg>
		</offsets>
	</model>
	
	<model>
		<path>Aircraft/FGR2/Models/Effects/Vapour/Vapour2.xml</path>
		<offsets>
			<x-m>1.0</x-m>
			<y-m>4</y-m>
			<z-m>0.9</z-m>
			<roll-deg>0</roll-deg>
			<pitch-deg>0</pitch-deg>
			<heading-deg>-45</heading-deg>
		</offsets>
	</model>
 
 
 <!-- aircraft wash modeled in the lines below -->
 
 <model>
	 <name>aircraft_wash_l</name>
	 <path>Aircraft/FGR2/Models/Effects/aircraft_wash.xml</path>
	 <condition>
		 <equals>
			 <property>controls/state/low_level</property>
			 <value>1</value>
		 </equals>
	 </condition>
	 <offsets>
		 <x-m>25.000</x-m>
		 <y-m>4.50</y-m>
		 <z-m>0.0</z-m>
		 <pitch-deg>0</pitch-deg>
	 </offsets>
 </model>
 
 <model>
	 <name>aircraft_wash_r</name>
	 <path>Aircraft/FGR2/Models/Effects/aircraft_wash.xml</path>
	 <condition>
		 <equals>
			 <property>controls/state/low_level</property>
			 <value>1</value>
		 </equals>
	 </condition>
	 <offsets>
		 <x-m>25.000</x-m>
		 <y-m>-4.50</y-m>
		 <z-m>0.0</z-m>
		 <pitch-deg>0</pitch-deg>
	 </offsets>
 </model>
  
  <animation>
	 <type>translate</type>
	 <object-name>aircraft_wash_l</object-name>
	 <object-name>aircraft_wash_r</object-name>
	 <property>position/altitude-agl-ft</property>
	 <condition>
		 <equals>
			 <property>controls/state/low_level</property>
			 <value>1</value>
		 </equals>
	 </condition>
	 <interpolation>
		 <entry>
			 <ind>0.0</ind>
			 <dep>0.0</dep>
		 </entry>
		 <entry>
			 <ind>300.0</ind>
			 <dep>-90</dep>
		 </entry>
	 </interpolation>
	 
	 <axis>
		 <x>-1</x>
		 <y>0</y>
		 <z>1.0</z>
	 </axis>
	 
 </animation>

 <model>
		<name>fire</name>
		<path>Aircraft/FGR2/Models/Effects/Engine/Fire.xml</path>
		<condition>
			<equals>
				<property>sim/crashed</property>
				<value type="bool">true</value>
			</equals>
		</condition>
		<offsets>
			<x-m>1.05</x-m>
			<y-m>0.00</y-m>
			<z-m>1.75</z-m>
			<heading-deg>0</heading-deg>
			<roll-deg>0</roll-deg>
			<pitch-deg>0</pitch-deg>
		</offsets>
	</model>

	 <model>
		<path>Aircraft/FGR2/Models/Effects/boom/fx.xml</path>
		<offsets>
			<x-m>-2</x-m>
			<y-m>0</y-m>
			<z-m>0</z-m>
			<pitch-deg>0</pitch-deg>
		</offsets>
	</model> 
	
	
	
  
 
 
</PropertyList>
 
